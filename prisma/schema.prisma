generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model arquivos {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  projeto_id String   @db.Uuid
  path       String
  content    String?
  criado_em  DateTime @default(now()) @db.Timestamptz(6)
  projetos   projetos @relation(fields: [projeto_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([projeto_id], map: "idx_arquivos_projeto_id")
}

model project_context {
  id            String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  projeto_id    String   @db.Uuid
  estrategia    String?
  fases         Json?
  arquivos      Json?
  atualizado_em DateTime @default(now()) @db.Timestamptz(6)
  projetos      projetos @relation(fields: [projeto_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([arquivos], map: "idx_project_context_arquivos", type: Gin)
  @@index([fases], map: "idx_project_context_fases", type: Gin)
}

model projetos {
  id              String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  usuario_id      String?           @db.Uuid
  nome            String
  estrategia      String?
  fases           Json?
  criado_em       DateTime          @default(now()) @db.Timestamptz(6)
  arquivos        arquivos[]
  project_context project_context[]
}

model usuarios {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email     String   @unique
  nome      String?
  criado_em DateTime @default(now()) @db.Timestamptz(6)
}
